package test;

struct Point {
    x: int,
    y: int
}

struct Person {
    name: string,
    age: int
}


pub fn point_equals(p1: Point, p2: Point) -> bool {
    return p1.x == p2.x && p1.y == p2.y;
}

pub fn signum(x: int) -> int {
    if x < 0 {
      return -1;
    }
    if x > 0 {
      return 1;
    }
    return 0;
}

pub fn abs(x: int) -> int {
    if x < 0 {
      return -x;
    }
    return x;
}

pub fn sum(xs: [int]) -> int {
    let mut sum = 0;
    let idx = 0;
    while idx < xs.len() {
        sum = sum + xs[idx];
        idx = idx + 1;
    }
    return sum;
}

pub fn factorial(n: int) -> int {
    if n == 0 {
        return 1;
    }
    return n * factorial(n - 1);
}

pub fn factorial_iter(n: int) -> int {
    let mut result = 1;
    let mut i = 1;
    while i <= n {
        result = result * i;
        i = i + 1;
    }
    return result;
}





















